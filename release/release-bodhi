#!/bin/sh -euf
#
# release-bodhi
#
# A script that does a Bodhi update request.
#
# Arguments are described here. Most arguments have an equivalent envvar.
#
# -m srpm    RELEASE_SRPM=srpm      Path to SRPM
# -q         RELEASE_QUIET=1        Make output more quiet
# -x         RELEASE_TRANSACTION=1  SIGSTOP before pushing the dist-git commit
# -v         RELEASE_VERBOSE=1      Make output more verbose
#

set -euf

# Various arguments
TRANSACTION=${RELEASE_TRANSACTION:-0}
QUIET=${RELEASE_QUIET:-0}
VERBOSE=${RELEASE_VERBOSE:-0}
SRPM=${RELEASE_SRPM:-$PWD/srpm}

# Other globals
FEDORA=""
CLEANUP=""
USER=""

usage()
{
    echo "usage: release-bodhi [-qvx] [-s SRPM] FEDORA" >&2
    exit ${1-2}
}

trace()
{
    if [ $QUIET -eq 0 ]; then
        echo "> $@" >&2
    fi
}

message()
{
    echo "release-bodhi: $@" >&2
}

readlink_or()
{
    if ! readlink "$1"; then
        echo "$1"
    fi
}

prepare()
{
    srpm=$(readlink_or "$SRPM")
    BUILD=$(echo "$srpm" | sed -n 's!^\(.*/\)\?\(.\+\)\(\.src\.rpm\|\.srpm\)$!\2!p')
    if [ -z "$BUILD" ]; then
        message "$SRPM: is not a valid koji source rpm name"
        exit 1
    fi
}

commit()
(
    bodhi --new --type=enhancement --close-bugs \
        --stablekarma=3 --unstablekarma=-1 --request=stable --release="$FEDORA" \
        --username=stefw $BUILD

    bodhi --new --type=enhancement --notes="$notes" --close-bugs --stablekarma=3 --unstablekarma=1 --request=stable
)

while getopts "f:kp:s:t:qvx" opt; do
    case "$opt" in
    m)
        SRPM="$OPTARG"
        ;;
    q)
        QUIET=1
        VERBOSE=0
        ;;
    v)
        QUIET=0
        VERBOSE=1
        ;;
    x)
        TRANSACTION=1
        ;;
    -)
        break
        ;;
    *)
        usage
        ;;
    esac
done

shift $(expr $OPTIND - 1)

if [ $# -ne 1 ]; then
    usage
fi

FEDORA="$1"

if [ -z "$SRPM" ]; then
    message "no package specified"
    exit 2
fi

prepare
exit

if [ $TRANSACTION -eq 1 ]; then
    kill -STOP $$
fi

commit
